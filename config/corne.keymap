/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        //        as: auto_shift {
        //            compatible = "zmk,behavior-hold-tap";
        //            #binding-cells = <2>;
        //            tapping_term_ms = <200>;
        //            quick_tap_ms = <0>;
        //            flavor = "tap-preferred";
        //            bindings = <&kp>, <&kp>;
        //        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            label = "HT";
        };
    };

    combos {
        compatible = "zmk,combos";

        LTenkey {
            bindings = <&tog 1>;
            key-positions = <31 21>;
            layers = <0 1 3 4 5 2 6 7>;
        };

        LFkeys {
            bindings = <&tog 3>;
            key-positions = <31 23>;
            layers = <0 1 3 4 5 2 6 7>;
        };

        BT {
            bindings = <&tog 4>;
            key-positions = <31 3>;
            layers = <0 3 1 4 5 2 6 7>;
        };

        FPS {
            bindings = <&tog 5>;
            key-positions = <31 12>;
            layers = <0 3 1 4 5 2 6 7>;
        };

        RArrows {
            bindings = <&tog 2>;
            key-positions = <31 22>;
            layers = <0 3 4 5 2 1 6 7>;
        };

        Lightroom {
            bindings = <&tog 7>;
            key-positions = <31 1>;
            layers = <0 3 4 5 2 1 6 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
  &kp Q        &kp W           &kp E        &kp R         &kp T        &mt LC(Y) Y  &kp U         &kp I                 &kp O                &kp P
  &hm LGUI A   &hm LEFT_ALT S  &hm LCTRL D  &hm LSHIFT F  &kp G        &kp H        &hm RSHIFT J  &hm RCTRL K           &hm RIGHT_ALT L      &hm LGUI SQT
  &mt LC(Z) Z  &mt LC(X) X     &mt LC(C) C  &mt LC(V) V   &kp B        &kp N        &kp M         &kp COMMA             &mt QUESTION PERIOD  &kp SLASH
                               &kp TAB      &to 0         &kp SPACE    &kp RET      &mo 3         &ht DELETE BACKSPACE
            >;
        };

        LTenKey {
            bindings = <
  &trans           &kp N7  &kp N8  &kp N9  &ht MINUS PLUS        &trans  &trans  &trans  &trans  &trans
  &mt LC(V) LC(C)  &kp N4  &kp N5  &kp N6  &ht KP_DIVIDE STAR    &trans  &trans  &trans  &trans  &trans
  &trans           &kp N1  &kp N2  &kp N3  &kp TAB               &trans  &trans  &trans  &trans  &trans
                           &kp N0  &trans  &kp ENTER             &trans  &trans  &trans
            >;

            label = "LTenKey";
        };

        RArrows {
            label = "RArrows";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP    &kp HOME         &kp UP_ARROW       &kp END    &trans
  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp LEFT         &kp DOWN           &kp RIGHT  &trans
  &trans  &trans  &trans  &trans  &trans    &trans         &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RALT   &kp RGUI
                  &trans  &trans  &trans    &trans         &trans           &trans
            >;
        };

        Function {
            bindings = <
  &trans  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans
  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &trans  &trans  &trans  &trans
  &trans  &kp F1  &kp F2  &kp F3  &kp F12    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "Function";
        };

        Bluetooth {
            bindings = <
  &trans  &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
  &trans  &bt BT_SEL 3  &bt BT_SEL 4  &bootloader   &trans        &trans  &trans  &trans  &trans  &trans
  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans
                        &trans        &trans        &trans        &trans  &trans  &trans
            >;

            label = "Bluetooth";
        };

        FPS {
            bindings = <
  &kp Q           &none   &kp W   &kp E   &kp R        &trans  &trans  &trans  &trans  &trans
  &kp LEFT_SHIFT  &kp A   &kp S   &kp D   &trans       &trans  &trans  &trans  &trans  &trans
  &trans          &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &kp SPACE    &trans  &trans  &trans
            >;

            label = "FPS";
        };

        NumPunc {
            bindings = <
  &kp N1     &kp N2             &kp N3           &kp N4                &kp N5    &kp N6  &kp N7                &kp N8          &kp N9              &kp N0
  &kp GRAVE  &mt LEFT_ALT APOS  &mt LCTRL MINUS  &mt LEFT_SHIFT EQUAL  &trans    &trans  &mt RIGHT_SHIFT SEMI  &mt RCTRL LBKT  &mt RIGHT_ALT RBKT  &mt RIGHT_GUI BSLH
  &trans     &trans             &trans           &trans                &trans    &trans  &trans                &trans          &trans              &trans
                                &trans           &trans                &trans    &trans  &trans                &trans
            >;

            label = "NumPunc";
        };

        Lightroom {
            bindings = <
  &trans  &trans    &kp UP    &kp X      &kp P     &trans  &trans  &trans  &trans  &trans
  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans    &trans    &trans     &trans    &trans  &trans  &trans  &trans  &trans
                    &trans    &trans     &trans    &trans  &trans  &trans
            >;
        };

        //                raise_layer {
        // -----------------------------------------------------------------------------------------
        // | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
        // | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
        // | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
        //            | GUI | ESC | SPC |     | ENT |     | TAB |
        //                        display-name = "Raise";
        //                        bindings = <
        //   AS(N1)    AS(N2)    AS(N3)    AS(N4)    AS(N5)        AS(N6)    AS(N7)    AS(N8)    AS(N9)   AS(N0)
        //   AS(MINUS) AS(EQUAL) &kp LBRC  &kp LBKT  &kp LPAR      &kp RPAR  &kp RBKT  &kp RBRC  AS(FSLH) AS(BSLH)
        //   AS(GRAVE) &trans    &trans    AS(COMMA) &kp COLON     &kp SEMI  AS(DOT)   &kp LCTRL &kp RALT &trans
        //                       &kp LGUI  &kp ESC   &kp SPACE     AS(RET)   &trans    &kp TAB
        //                        >;
        //                };
    };
};
